#this code was ran in visual studio code, make sure you choose the cellpose environment before using it. This is done by installing cellpose and python. 

import numpy as np
import time, os, sys
from urllib.parse import urlparse
import matplotlib.pyplot as plt
import matplotlib as mpl
mpl.rcParams['figure.dpi'] = 300
from cellpose import utils, io
from cellpose import models


# set folder path
folder_path = '\\\\somfiles.som.umaryland.edu\\Liang_Drive\\imaging\\leica\\20230426_nanofast_summary\\test'

# create a list of file pathsï¼Œ only tiff files
files = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if os.path.isfile(os.path.join(folder_path, f)) and os.path.splitext(f)[1] == '.tif']


# initialize model
model = models.Cellpose(gpu=False, model_type='cyto')

# set channels
# set channels
channels = [3,0] # IF YOU HAVE GRAYSCALE it is 0
# define CHANNELS to run segementation on
# grayscale=0, R=1, G=2, B=3
# channels = [cytoplasm, nucleus]
# if NUCLEUS channel does not exist, set the second channel to 0
# channels = [0,0]
# IF ALL YOUR IMAGES ARE THE SAME TYPE, you can give a list with 2 elements
# channels = [0,0] # IF YOU HAVE GRAYSCALE
# channels = [2,3] # IF YOU HAVE G=cytoplasm and B=nucleus
# channels = [2,1] # IF YOU HAVE G=cytoplasm and R=nucleus

# process each file
for filename in files:
    img = io.imread(filename)
    masks, flows, styles, diams = model.eval(img, diameter=None, channels=channels)

    # save results so you can load in gui
    #io.masks_flows_to_seg(img, masks, flows, diams, filename, channels)

    # save results as png
    io.save_to_png(img, masks, flows, filename)
